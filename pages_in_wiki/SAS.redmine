h1. SAS

h2. Description 

SAS software provides business analytics solutions through the utilization of high-performance computing, data management, and the management, processing, and analysis of "big data."

** From: http://www.sas.com/software/sas9/

h2. Version

** 9.3

h2. Authorized Users

** @circe@ account holders

h2. Platforms

** @circe@ login nodes
** @circe@ cluster

h2. Running on Circe

h3. Modules

SAS requires the following module file to run:

* apps/sas/9.3

To run [[SAS]] on the cluster, ensure that you use 'module add' prior to using any [[SAS]] executables. See Modules for more information.

h3. Interactive Mode
Before you login to @circe@, you need to make sure you have X11 Forwarding enabled. If you're logging in from a UNIX/Linux system, you will need to do the following:
      <pre>
ssh -Y user@circe.rc.usf.edu
      </pre>
      If you're logging in from a Windows machine, you need to Enable X11 Forwarding in whatever ssh client you're using.  Make sure you've followed our [[XWin32Install|XWin32 Guide]] to configure your connection to @circe@.

Next, use qlogin to enter an interactive shell. This example is for 48 hours using 4 cpu cores on 1 node with 8GB of shared memory:
<pre>
qlogin -l h_rt=48:00:00,mpj=8.0G,nodes=1,ppn=4
</pre>
Once you get dropped into an interactive shell on the execution host, you need to load the IDL module.
<pre>
module load apps/sas/9.3
</pre>
You should now be able to execute "sas" (graphical mode) from the command line.

SAS can also be launched through the NX environment using the Applications menu.  For more information about the NX environment, please see our [[CirceDesktop|Circe NX Desktop]] documentation.

h3. Batch Job submission
To run batch jobs on the Circe cluster, users will need to submit their jobs to the scheduling environment if their jobs take more than 20 minutes to run on a standard PC.

If, for example, you have a [[SAS]] script file named test.sas with all your tasks defined in it, you would set up a submit script to use the [[SAS]] kernel like this:

<pre>
#!/bin/bash
#$ -cwd
#$ -N sas_test
#$ -l h_rt=48:00:00,mpj=8.0G,nodes=1,ppn=4
#$ -j y
#$ -o output.$JOB_ID

module load apps/sas/9.3 
sas test.sas
</pre>

SAS script files can either be created using a standard text editor or by exporting an existing worksheet from the graphical [[SAS]] interface in .sas format.

NOTE: When requesting your resources, you will need 1 more processor than the number of tasks in your [[SAS]] job. So, if you are using 3 tasks, you will need to request ppn=4.

h3. Documentation
Use the following links for the [[SAS]] User Manual and Programming Guides. 
** "SAS 9.3 Product Documentation":http://support.sas.com/documentation/93/index.html
** "Scalable [[SAS]] Procedures ":http://support.sas.com/rnd/scalability/procs/index.html
** "SAS/CONNECT - Tips and Tricks ":http://support.sas.com/rnd/scalability/tricks/connect.html

h3. More Job Information
See the following for more detailed job submission information:
** [[gridEngineUsers|SGE User's Guide]]
** [[gridEnginePolicy|Scheduling and Dispatch Policies]]
** [[gridEngineTechn|Advanced Submit Techniques]]

h3. Reporting Bugs
Report bugs to the IT Help Desk: help@usf.edu
