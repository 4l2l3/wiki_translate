h1. [[MM5]] 

h2. Description
 

The PSU/NCAR mesoscale model is a limited-area, nonhydrostatic or hydrostatic (Version 2 only), terrain-following sigma-coordinate model designed to simulate or predict mesoscale and regional-scale atmospheric circulation.

h2. Version


** *3.6.1*

h2. Authorized Users


** @circe@ account holders

h2. Platforms


** @circe@ cluster

h2. Installation


MM5 is setup to install into and be run from a particular directory structure. This structure has been set up in the directory /opt/apps/mm5 for the supporting applications. To install your copy of the program, log on to your account on Circe, and from your home directory, execute the command:

***** @host> cp -r /opt/apps/mm5.64 mm5@

h2. Local Documentation


The parallel version of MM5 should now be in HOME/mm5/MM5.

Next, you will want to place all the necessary input files for the run in the Run directory. For further explaination of these files please refer to the MM5 [[MPP]] tutorial.

Now you may edit the configure.user file in the MM5 directory. If you need an explanation of the settings you may visit the MM5 [[MPP]] tutorial here. Do not change the options under sections 1, 3, 4, and 7g; these are set up for you already and may cause errors in the compile of MM5.

The next step is to compile the model, execute this command in the MM5 directory:

***** @host> pgi@
***** @host> cd mm5@
***** @host> make uninstall@
***** @host> make mpp@ 

Upon successful completion of the compile, you should have a new file in the Run directory called mm5.mpp. If not, then please refer to the tutorial at http://www.mmm.ucar.edu/mm5/mpp/basic_info.html for more help.

Assuming that everything when okay, you may now create the deck file by executing the command:

***** @host> make mm5.deck@ 

After the file mm5.deck is created you may edit it to setup the options for your run.

Next you must execute the mm5.deck file to create a namelist file called mmlif. Do this by executing the following command:

***** @host> ./mm5.deck@ 

Then the last thing to do is submit your job. You will have a file included in the MM5+MPP/Run directory called mm5.sh. This is the file that will be used to submit the job in this example. If you wish you may edit the file to suit your needs, you will need to change line for ouput to include your home directory. Once the editing is done, you can submit the job to the cluster by executing this command:

***** @host> cd Run@
***** @host> qsub mm5.sh@ 

Note: We have run tests jobs of the sample MM5 data and found 12 nodes to be optimal.

All output from the job's run will be created in the Run directory which can be viewed using the GRAPH program.

If you would like a more extensive set of directions we recommend taking a look at the MM5 tutorial at http://www.mmm.ucar.edu/mm5/mpp.html.

----

h4. Running GRAPH


To run the graph program change to the directory HOME/mm5-32bit/GRAPH. We have already compiled the graph program for you so all you have to do is run two commands. To execute the commands type:

***** @host> pgi32@
***** @host> ./graph.csh n m X_DOMAINx@ 

where "n" in the command is the number of plot files to split (rarely used, but may be used to split plots into several pieces based on time periods), "m" is the number of input files to be expected, and X_DOMAINx is MM5 modeling system output file (e.g. MMOUT_DOMAIN1). You can have more than one input file for Graph job, but they must come from the same domain. So for a typical Graph job where you don't want to split plot file, and you only have one input file, the command is

***** @host> ./graph.csh 1 1 X_DOMAINx@ 

If you have two files as input to Graph (for example, one from a MM5 run, and the other from the restart), you may type:

***** @host> ./graph.csh 1 2 mm5-file1 mm5-file2@

The output file from Graph is called 'gmeta', which is an NCAR Graphics formated plot file. To view gmeta generated by Graph, one must use the NCAR Graphics utility 'idt' (more information can be found on the man page: man idt), i.e.,

***** @host> idt gmeta &@

You may also find another gmeta file in the directory: gmeta.split1. This is the same as gmeta file. If you used n>1, you'd find gmeta.split1, gmeta.split2, ..., gmeta.splitn in the directory. Each of these splitted file would contain a subset of the entire plot file.

You may convert the gmeta file to a number of other graphic formats. For example, to convert to black-white postscript file, you can use the command

***** @host> ctrans -d ps.mono gmeta > gmeta.ps@ 

'-d ps.color' will allow you to translate color plots. For more information, check man page on 'ictrans'.

If you would like a more extensive set of directions or are having problems we recommend taking a look at the MM5 tutorial at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/graph/graph.html.

----

h4. Running TERRAIN


Change to the directory HOME/mm5-32bit/TERRAIN to get to the program directory for TERRAIN. The first thing you need to do is create the terrain.deck file. You can do this with the following commands:

***** @host> pgi32@
***** @host> make terrain.deck@

The next thing to do is compile and run the TERRAIN program. You do this by executing the command:

***** @host> ./terrain.deck >& log &@ 

If the run is successful you the TERRAIN will generate new files in the directory called TER.PLT, TERRAIN_DOMAIN1, TERRAIN_DOMAIN2, and terrain.print.out. The file terrain.print.out is a log file of all the print statements generated by TERRAIN and should end with the following lines if the program run without errors.

   @NORMAL TERMINATION OF TERRAIN PROGRAM@

The TER.PLT file is a plot that can be viewed by issuing the following command:

***** @host> idt TER.PLT &@

The remaining files are binary output that are used in other MM5 programs.

If you would like a more extensive set of directions or are having problems we recommend taking a look at the MM5 tutorial at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/terrain/ter.html.

----

h4. Running REGRID


The REGRID programs are already compiled for you all you must do is edit specifications and make sure to include input files. If you need an explaination of either these to things please see the REGRID tutorial first at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/regrid/regrid.html. Otherwise let us move on to the next step.
Running pregrid sub-program:

Change to the directory HOME/mm5-32bit/REGRID/pregrid and edit the pregrid.csh file to meet your specifications. After you are done you can now run the pregrid program with the following command:

***** @host> ./pregrid.csh >& log &@

If the run is successful you should now have some new files in the pregrid directory that are generated by the pregrid program. The file log should end in something similiar to the following line if the job ran successfully.

   Normal termination of program PREGRID_JOB
If everything looks okay then it is time to move to the next step, otherwise we recommend you read the REGRID tutorial that is given at the beginning of this section.

----

h4. Running regridder


Change to the directory HOME/mm5-32bit/REGRID/regridder and edit the namelist.input file to meet your specifications. After you are done you can now run the regridder program with the following command:

***** @host> ./regridder >& log &@ 

If the job runs successfully you should get a file generated called REGRID_DOMAIN1. This file is used in either RAWINS, LITTLE_R, or INTERPF. If you are going to use the RAWINS program, pay attention to the print statements at the bottom of the log file, it tells you the parameters that you will need in RAWINS.

@************************************************************@
@                  Attention RAWINS users!@
@Here is a handy PARAMETER statement you can use for RAWINS.@
@Increase the LMX value by the number of new pressure levels @
@pressurethat you want RAWINS to add.@
`      PARAMETER ( IMX h1.   45, JMX
   51, LMX =   21)`
@************************************************************ @

If you wish to generate a graph of the data you may do so by using the GRAPH program. If you would like a more extensive set of directions or are having problems we recommend taking a look at the MM5 tutorial at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/regrid/regrid.html.

----

h4. Running RAWINS


Before working with RAWINS we must first create the rawins.deck file. To do this enter the following commands:

***** @host> pgi32@
***** @host> make rawins.deck@ 

Now that the rawins.deck file has been created, go ahead and edit it to meet your specifications. If you need an explaination of the deck file please see the RAWINS tutorial first at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/rawins/rawins.html. Otherwise let us move on to the next step. Once you are done editing the file you may then run the RAWINS program by issuing the following command:

***** @host> ./rawins.deck >& log &@ 

If the job completed successfully you should see the following print statements at the end of the generated rawins.print.out file:

   @SUCCESSFUL COMPLETION OF PROGRAM RAWINS@
   @STOP 99999@

Assuming that the job did complete successfully you should see some new files generated by RAWINS called RAWINS_DOMAIN1, RAWOBS_DOMAIN1, SFC4DOBS_DOMAIN1, SND.PLT, UPR4DOBS_DOMAIN1, and rawins.print.out. The SND.PLT file can be viewed by using the following command:

***** @host> idt SND.PLT &@

The remaining files except for rawins.print.out can be viewed by using the GRAPH command.

If you would like a more extensive set of directions or are having problems we recommend taking a look at the MM5 tutorial at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/rawins/rawins.html.

----

h4. Running LITTLE_R


LITTLE_R has already been compiled for you, all you need to do is setup the namelist.input file to your specifications. If you need an explaination of the namelist.input file please see the LITTLE_R tutorial first at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/little_r/little_r.html. Otherwise let us move on to the next step. Once you are done editing the file you may then run the LITTLE_R program by issuing the following commands:

***** @host> pgi32@
***** @host> ./little_r >& log &@

If the job completed successfully you should see the following print statements at the end of the generated log file:

   @STOP 99999@

LITTLE_R_DOMAIN1 is the binary output file from LITTLE_R, and will be the input file for INTERPF. It contains 3-D pressure level analyses of winds, temperature, RH, geopotential height, and sea level pressure, and it is similar to the binary output file from RAWINS.

----

h4. Running INTERPF


The INTERPF has already been compiled for you, all that is needed to run the program is modifaction of the file namelist.input to your specifications. Once the specifications are setup you can run the program by issuing the following command:

***** @host> pgi32@
***** @host> ./interpf >& log &@ 

If the run is successful you should see the files BDYOUT_DOMAIN1, LOWBDY_DOMAIN1, MMINPUT_DOMAIN1 and log. Be sure to check the log file for clues to what may have happened if the run is not successful, otherwise the end of the log file should look similiar to the following lines if the run was successful:


@FINISHED INTERPF FOR DOMAIN ID #1@

@STOP 99999@

MMINPUT_DOMAIN1 is the binary initial condition file for MM5, and the other files hold additional information. You may use the GRAPH program to generate graphs of the information.

----

If you would like a more extensive set of directions or are having problems we recommend taking a look at the MM5 tutorial at http://www.mmm.ucar.edu/mm5/mm5v3/tutorial/interpf/interpf.html. 
