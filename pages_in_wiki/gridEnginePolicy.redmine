h1.
----


This guide will help users understand how their jobs get executed and why they get the priority that they do.
h2. Fair-Share Scheduling
The !GridEngine installation at USF implements a Fair-Share-based scheduling system where individual utilization figures are used to determine the priority, in the queue, of that individual's next job relative to other users.  Theoretically, this should result in the following situation:

** Over the course of two weeks, user johnq submits over 100 jobs and consumes about 1000 hours of CPU time.  The system records this usage.
** On the third week, janeq logs in and sees that johnq has submitted 1000 jobs to the queue which will require 10000 hours of CPU time to complete.  janeq just returned from a conference and is eager to get started on her work but is upset that the system is completely full.
** Fortunately for janeq, she will not have to wait for all of johnq's jobs to finish first.  Because he has been heavily utilizing the system, johnq's utilization has been recorded in the share tree and affects the priority of his jobs relative to other users like janeq.  The use of system resources over time is calculated into his job priority.  Since greater consumption translates into lower relative priority, all of johnq's pending jobs are pushed to the back of the queue so that janeq can get started.
** In the next two weeks, janeq shows that she too can be a very heavy user of the system.  As she acquires more utilization points, her priority begins to drop so that other users can have access to the system.

This is how the scheduler works, in the grossest possible sense.  There are also other things to take into account such as job sizes and requested resources.  There are also different queues that jobs are dispatched to.

h2. Dispatch Policy
Because of the layout of the queue, jobs with shorter runtime specifications will start immediately or close to immediately.  Jobs with medium to longer runtimes will dispatch at longer intervals.  This is so users who have a simple 1 hour task will not be held up by a user wishing to run a 1 week task.  The jobs have different requirements and thus should be treated differently.
